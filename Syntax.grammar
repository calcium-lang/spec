# Syntax
## Packages
CompilationUnit:
    [PackageDeclaration] [ImportDeclarations] TopLevelTypeDeclaration

---

PackageDeclaration:
    "package" PackageName [";"]

ImportDeclarations:
    ImportDeclaration {ImportDeclaration}

TopLevelTypeDeclaration:
    [DeclarationEncapsulation] TypeDeclaration

---

ImportDeclaration:
    "import" ImportNames [FromName] [";"]

DeclarationEncapsulation:
    (one of)
    "public" "protected" "private"

TypeDeclaration:
    TypedefDeclaration
    EnumDeclaration
    UnionDeclaration
    StructDeclaration

---

ImportNames:
    ImportName {"," ImportName}

FromName:
    "from" PackageOrTypeName

## Names
PackageName:
    Identifier {"." Identifier} `[Version]`[^low]

ImportName:
    Identifier `[Version]`[^low] ["as" Identifier]

PackageOrTypeName:
    Identifier `[Version]`[^low] {"." Identifier `[Version]`[^low]}

## Typedefs, Enums, Unions and Structs
TypedefDeclaration:
    "typedef" Identifier `[Version]`[^low] BaseType [TypedefBody]

EnumDeclaration:
    `[EnumLayout]`[^low] "enum" Identifier `[Version]`[^low] [BaseType] EnumBody

UnionDeclaration:
    "union" Identifier `[Version]`[^low] UnionBody

StructDeclaration:
    [DeclarationExtensibility] `[StructLayout]`[^low] "struct" Identifier `[Version]`[^low] [BaseType] StructBody

---

Version:
    `"@" IntegerLiteral "." IntegerLiteral`[^low]

BaseType:
    ":" Type

TypedefBody:
    "{" BodyDeclarations "}"
    ";"

EnumLayout:
    `"strict"`[^low]
    `"unsafe" "C"`[^low]

EnumBody:
    "{" EnumConstants [";" BodyDeclarations] "}"

UnionBody:
    "{" UnionTypes [";" BodyDeclarations] "}"

DeclarationExtensibility:
    (one of)
    "final" "abstract"

StructLayout:
    (one of)
    `"strict" "C" "packed"`[^low]

StructBody:
    "{" [BodyDeclarations] "}"

---

BodyDeclarations:
    BodyDeclaration {BodyDeclaration}

EnumConstants:
    EnumConstant {"," EnumConstant}

UnionTypes:
    TypeDeclaration {"," TypeDeclaration}

> The semicolon in TypedefBody must never be found in TypedefDeclaration.

---

BodyDeclaration:
    StaticInitializer
    [DeclarationEncapsulation] MemberDeclaration
    [DeclarationEncapsulation] TypeDeclaration

> TypedefBody must always be found in TypedefDeclaration.

EnumConstant:
    ["."] Identifier [("="|":") VariableInitializer]

---

StaticInitializer:
    `[SymbolNaming]`[^low] "static" `[Version] [StringIdentifier]`[^low] Block

MemberDeclaration:
    [MemberStaticity] FieldDeclaration
    [MemberStaticity] MethodDeclaration

VariableInitializer:
    Expression
    ArrayInitializer
    StructInitializer

---

SymbolNaming:
    (one of)
    `"strict" "plain"`[^low]

MemberStaticity:
    "static"

FieldDeclaration:
    ValueMutability `[ValueVolatility] [SymbolNaming]`[^low] Identifier `[StringIdentifier]`[^low] ":" Type ["=" VariableInitializer] ";"

MethodDeclaration:
    [DeclarationExtensibility] [MethodOverride] `[FunctionStrictness]`[^low] [FunctionPurity] "func" MethodHeader MethodBody

---

MethodOverride:
    "override"

MethodHeader:
    MethodDeclarator ["->" Result]

MethodBody:
    Block
    ";"

---

MethodDeclarator:
    `[SymbolNaming]`[^low] Identifier `[Version] [StringIdentifier]`[^low] [":" TypeName] "(" [Parameters] ")"

---

Parameters:
    ThisParameter ["," FixedParameters] ["," VariableArityParameter]
    FixedParameters ["," VariableArityParameter]
    VariableArityParameter

---

FixedParameters:
    FixedParameter {"," FixedParameter}

VariableArityParameter:
    "..." `[VariableArityParameterLayout]`[^low] Identifier [":" Type]

---

FixedParameter:
    Identifier [":" Type]

## Types
Type:
    PrimitiveType [PointerOrArraySuffix]
    TypeName [PointerOrArraySuffix]
    `VoidPointerType [PointerOrArraySuffix]`[^low]
    FunctionType
    "(" FunctionType ")" PointerNullity
    "(" FunctionType ")" PointerOrArraySuffix

---

PrimitiveType:
    `[TypeAtomicity]`[^low] NumericType
    `[TypeAtomicity]`[^low] "bool"
    `[TypeAtomicity]`[^low] "_char"

PointerOrArraySuffix:
    PointerSuffix [PointerOrArraySuffix]
    ArrayDim [PointerOrArraySuffix]

TypeName:
    `[TypeStrictness|TypeBareness]`[^low] Identifier `[Version]`[^low] {"." Identifier `[Version]`[^low]} ["(" [ParameterTypes] ")"]

VoidPointerType:
    `"unsafe" "void" [ValueMutability] [ValueVolatility] "&" [TypeAtomicity] [ReferenceAliasability] [PointerNullity]`[^low]

FunctionType:
    `[TypeAtomicity] [FunctionStrictness]`[^low] [FunctionPurity] "func" "(" [ParameterTypes] ")" "->" Result

PointerNullity:
    ["local"] "?"

---

TypeAtomicity:
    `"atomic"`[^low]

NumericType:
    IntegralType
    FloatingPointType

PointerSuffix:
    [ValueMutability] `[ValueVolatility]`[^low] "&" `[PointerWidth|TypeAtomicity] [ReferenceAliasability]`[^low] [PointerNullity]

ArrayDim:
    "[" (`[TypeStrictness]`[^low] [Expression]|`TypeBareness`[^low]) "]" [PointerNullity]

TypeStrictness:
    `"strict"`[^low]

ParameterTypes:
    ThisParameter ["," FixedParameterTypes] ["," VariableArityParameterType]
    FixedParameterTypes ["," VariableArityParameterType]
    VariableArityParameterType

TypeBareness:
    `"unsafe" "bare"`[^low]

FunctionStrictness:
    `"strict"`[^low]

FunctionPurity:
    ["local"] "const"
    ["local"] "pure"

Result:
    "noreturn"
    "void"
    Type

---

IntegralType:
    (one of)
    `"_ubyte" "_byte" "_ushort" "_short" "_uint"`[^low] "_int" `"_ulong" "_long"`[^low]

FloatingPointType:
    (one of)
    "_float" `"_double"`[^low]

ValueMutability:
    ["unsafe"] "var"
    ["local"] "const"

ValueVolatility:
    `["local"] "volatile"`[^low]
    `["unsafe"] "stable"`[^low]

PointerWidth:
    `[["unsafe"] "unused"] [TypeStrictness] "wide"`[^low]
    `TypeBareness`[^low]

ReferenceAliasability:
    `["local"] "aliasable"`[^low]
    `["unsafe"] "restrict"`[^low]

ThisParameter:
    "this" [":" TypeName [ValueMutability] `[ValueVolatility]`[^low] ["&" `[PointerWidth] [ReferenceAliasability]`[^low]]]
    "this" ":" ValueMutability `[ValueVolatility]`[^low] ["&" `[PointerWidth] [ReferenceAliasability]`[^low]]
    `"this" ":" ValueVolatility ["&" [PointerWidth] [ReferenceAliasability]]`[^low]
    "this" ":" "&" `[PointerWidth] [ReferenceAliasability]`[^low]

FixedParameterTypes:
    FixedParameterType {"," FixedParameterType}

VariableArityParameterType:
    "..." `[VariableArityParameterLayout]`[^low] ":" Type

---

FixedParameterType:
    ":" Type

VariableArityParameterLayout:
    `"unsafe" "C"`[^low]

## Blocks and Statements
Block:
    "{" [BlockStatements] "}"

---

BlockStatements:
    BlockStatement {BlockStatement}

## Expressions

## Array and Struct Initializers
ArrayInitializer:
    "[" [VariableInitializers] "]" [":" Type]

StructInitializer:
    "{" [FieldInitializers] "}" [":" TypeName]

---

VariableInitializers:
    VariableInitializer {"," VariableInitializer}

FieldInitializers:
    FieldInitializer {"," FieldInitializer}

---

FieldInitializer:
    ["."] Identifier ("="|":") VariableInitializer

[^low]: Low level syntax.
