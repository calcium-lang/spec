# Syntax

CompilationUnit:
    [PackageDeclaration] [ImportDeclarations] TopLevelTypeDeclaration

--

PackageDeclaration:
    "package" PackageName [";"]

ImportDeclarations:
    ImportDeclaration {ImportDeclaration}

TopLevelTypeDeclaration:
    [TopLevelEncapsulation] TypeDeclaration

--

PackageName:
    Identifier {"." Identifier}

ImportDeclaration:
    ExplicitTypeImportDeclaration
    TypeImportOnDemandDeclaration

TopLevelEncapsulation:
    "public"

TypeDeclaration:
    TypedefDeclaration [";"]
    EnumDeclaration
    UnionDeclaration
    StructDeclaration

> TypedefBody and the semicolon after TypedefDeclaration are mutually exclusive, and exactly one of them must always be found in rule 1.

--

ExplicitTypeImportDeclaration:
    "import" ImportNames ["from" PackageOrTypeName] [";"]

TypeImportOnDemandDeclaration:
    "import" "*" "from" PackageOrTypeName [";"]

TypedefDeclaration:
    "typedef" Identifier BaseType [TypedefBody]

EnumDeclaration:
    "enum" Identifier [BaseType] EnumBody

UnionDeclaration:
    "union" Identifier UnionBody

StructDeclaration:
    [StructExtensibility] [StructLayout] "struct" Identifier [BaseType] StructBody

--

ImportNames:
    ImportName {"," ImportName}

PackageOrTypeName:
    Identifier {"." Identifier}

BaseType:
    ":" Type

TypedefBody:
    "{" BodyDeclarations "}"

EnumBody:
    "{" EnumConstants [";" BodyDeclarations] "}"

UnionBody:
    "{" UnionTypes [";" BodyDeclarations] "}"

StructExtensibility:
    (one of)
    "open" "abstract"

StructLayout:
    (one of)
    "ordered" "packed"

StructBody:
    "{" [StructBodyDeclarations] "}"

--

ImportName:
    Identifier ["as" Identifier]

Type:
    PrimitiveType [PointerOrArraySuffix]
    TypeName [PointerOrArraySuffix]
    VoidPointerType [PointerOrArraySuffix]
    FunctionType
    "(" FunctionType ")" PointerOrArraySuffix

BodyDeclarations:
    BodyDeclaration {BodyDeclaration}

EnumConstants:
    EnumConstant {"," EnumConstant}

UnionTypes:
    UnionType {"," UnionType}

StructBodyDeclarations:
    StructBodyDeclaration {StructBodyDeclaration}

--

PrimitiveType:
    [TypeAtomicity] NumericType
    [TypeAtomicity] "bool"
    [TypeAtomicity] "_char"

PointerOrArraySuffix:
    PointerSuffix [PointerOrArraySuffix]
    ArrayDim [PointerOrArraySuffix]

TypeName:
    ["unsafe" "bare"] Identifier {"." Identifier}

VoidPointerType:
    "unsafe" "void" "&" [TypeAtomicity]

FunctionType:
    [TypeAtomicity] "(" [ParameterTypes] ")" "->" Result

BodyDeclaration:
    StaticInitializer
    [NestedEncapsulation] MemberDeclaration
    [NestedEncapsulation] TypeDeclaration

EnumConstant:
    Identifier ["=" VariableInitializer]

UnionType:
    TypedefDeclaration
    EnumDeclaration
    UnionDeclaration
    StructDeclaration

StructBodyDeclaration:
    StaticInitializer
    [StructNestedEncapsulation] StructMemberDeclaration
    [StructNestedEncapsulation] TypeDeclaration

--

TypeAtomicity:
    "atomic"

NumericType:
    IntegralType
    FloatingPointType

PointerSuffix:
    [ValueMutability] [ValueVolatility] "&" [PointerWidth] [ReferenceAliasability]
    [ValueMutability] [ValueVolatility] "&" TypeAtomicity [ReferenceAliasability]

ArrayDim:
    "[" [ArrayLayout] [NumberLiteral] "]"
    "[" [ArrayLayout] Identifier "]"
    "[" [ArrayLayout] ArrayBareness "]"

ParameterTypes:
    ThisParameter ["," FixedParameterTypes] ["," VariableArityParameterType]
    FixedParameterTypes ["," VariableArityParameterType]
    VariableArityParameterType

Result:
    "noreturn"
    "void"
    Type

StaticInitializer:
    "static" [StringIdentifier] Block

NestedEncapsulation:
    (one of)
    "public" "private"

MemberDeclaration:
    FieldDeclaration
    MethodDeclaration

VariableInitializer:
    Expression
    ArrayInitializer
    StructInitializer

StructNestedEncapsulation:
    (one of)
    "public" "protected" "private"

StructMemberDeclaration:
    [MemberStaticity] FieldDeclaration
    [MemberStaticity] MethodDeclaration

--

IntegralType:
    (one of)
    "_ubyte" "_byte" "_ushort" "_short" "_uint" "_int" "_ulong" "_long"

FloatingPointType:
    (one of)
    "_float" "_double"

ValueMutability:
    ["unused"] "var"

ValueVolatility:
    ["local"] "volatile"

PointerWidth:
    ["unused"] "wide"
    "unsafe" "bare"

ReferenceAliasability:
    ["local"] "aliasable"

ArrayLayout:
    "packed"

ArrayBareness:
    "unsafe" "bare"

ThisParameter:
    "this" [":" TypeName [ValueMutability] [ValueVolatility] ["&" [PointerWidth] [ReferenceAliasability]]]
    "this" ":" ValueMutability [ValueVolatility] ["&" [PointerWidth] [ReferenceAliasability]]
    "this" ":" ValueVolatility ["&" [PointerWidth] [ReferenceAliasability]]
    "this" ":" "&" [PointerWidth] [ReferenceAliasability]

FixedParameterTypes:
    FixedParameterType {"," FixedParameterType}

VariableArityParameterType:
    "..." ":" Type

Block:
    "{" [BlockStatements] "}"

FieldDeclaration:
    FieldMutability [FieldVolatility] Identifier [StringIdentifier] ":" Type ["=" VariableInitializer] ";"

MethodDeclaration:
    [MethodExtensibility] [MethodOverride] "func" MethodHeader MethodBody

ArrayInitializer:
    "[" [VariableInitializers] "]"

StructInitializer:
    "{" [FieldInitializers] "}"

MemberStaticity:
    "static"

--

FixedParameterType:
    ":" Type

BlockStatements:
    BlockStatement {BlockStatement}

FieldMutability:
    (one of)
    "var" "const"

FieldVolatility:
    "volatile"

MethodExtensibility:
    (one of)
    "open" "abstract"

MethodOverride:
    "override"

MethodHeader:
    MethodDeclarator ["->" Result]

MethodBody:
    Block
    ";"

VariableInitializers:
    VariableInitializer {"," VariableInitializer}

FieldInitializers:
    FieldInitializer {"," FieldInitializer}

--

MethodDeclarator:
    Identifier [StringIdentifier] [":" TypeName] "(" [Parameters] ")"

FieldInitializer:
    Identifier "=" VariableInitializer

--

Parameters:
    ThisParameter ["," FixedParameters] ["," VariableArityParameter]
    FixedParameters ["," VariableArityParameter]
    VariableArityParameter

--

FixedParameters:
    FixedParameter {"," FixedParameter}

VariableArityParameter:
    "..." Identifier [":" Type]

--

FixedParameter:
    Identifier [":" Type]
